### PATH VARIABLES ###
# –ü—É—Ç—å –∫ —Å–∞–º–æ–º—É antigen
ANTIGEN_PATH="$HOME/.config/antigen.zsh"

# –ü—É—Ç—å –¥–ª—è cargo, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –Ω–∞ Rust
CARGO_PATH="$HOME/.cargo/bin"

# –ü—É—Ç—å –∫ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞–º Python, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –æ–Ω–∏
PYTHON_PATH="$HOME/.local/bin"

# –ü—É—Ç—å –¥–ª—è Node Version Manager, –µ—Å–ª–∏ –æ–Ω –≤–∞–º –Ω—É–∂–µ–Ω
NVM_DIR="$HOME/.nvm"

# –§–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤—Å—è –∏—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ zsh
HISTFILE="$HOME/.zsh_history"

# –†–µ–¥–∞–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ú–æ–∂–µ—Ç–µ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –ª—é–±–æ–π, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è
EDITOR="nvim"

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ —Ñ–∞–π–ª–µ
HISTSIZE=10000

# –ö–∞–∫ –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥ —à–µ–ª–ª –¥–æ–ª–∂–µ–Ω –ø–æ–º–Ω–∏—Ç—å –≤ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–ø–æ –∫–æ–º–∞–Ω–¥–µ history)
SAVEHIST=10000

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –≤ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ —Å—Ç–∏—Ä–∞–ª–∞—Å—å, –µ—Å–ª–∏ –º—ã –≤—ã–∫–ª—é—á–∏–º –∏ –≤–∫–ª—é—á–∏–º —à–µ–ª–ª
setopt appendhistory                      

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –±–∏–Ω–∞—Ä–Ω–∏–∫–∏ Cargo
if [ -d $CARGO_PATH ]; then
	export PATH=$CARGO_PATH:$PATH    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é CARGO –∫ PATH
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –±–∏–Ω–∞—Ä–Ω–∏–∫–∏ Python
if [ -d $PYTHON_PATH ]; then
	export PATH=$PYTHON_PATH:$PATH   # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PYTHON –∫ PATH
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–∞—á–∞–Ω –ª–∏ Antigen
if [ ! -f $ANTIGEN_PATH ]; then
    echo "Antigen is not found!" >&2
		
	# –ï—Å–ª–∏ antigen –Ω–µ —Å–∫–∞—á–∞–Ω, —Ç–æ –∫–∞—á–∞–µ–º –µ–≥–æ
	curl -L git.io/antigen > $ANTIGEN_PATH
fi

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ! –í—Å–µ —á—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –ø–æ–ø–∞–¥–∞—Ç—å –≤ –≤–∞—à .zshrc
# –Ø –¥–æ–±–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–π –∫—É—Å–æ—á–µ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ —É–≤–∏–¥–µ—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ–æ —Å–∫–∞—á–∞—Ç—å NVMüòä
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–∞ —Å–∏—Å—Ç–µ–º–µ Node Version Manager
if [ -d $NVM_PATH ]; then

	# –ï—Å–ª–∏ –µ—Å—Ç—å - –≤–∫–ª—é—á–∞–µ–º
	export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
else

	# –ï—Å–ª–∏ –Ω–µ—Ç - –∫–∞—á–∞–µ–º
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
fi


### PLUGIN MANAGER ###
source $ANTIGEN_PATH                               # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∞–º antigen

antigen bundle autojump                            # –ü–ª–∞–≥–∏–Ω –¥–ª—è –ø—Ä—ã–∂–∫–∞ –ø–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
antigen bundle git                                 # –ü–ª–∞–≥–∏–Ω –¥–ª—è —É–¥–æ–±–Ω—ã—Ö –∞–ª–∏–∞—Å–æ–≤ git
antigen bundle zsh-users/zsh-syntax-highlighting   # –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –∫–æ–º–∞–Ω–¥–∞ exa
type exa &> /dev/null &&
    antigen bundle DarrinTisdale/zsh-aliases-exa   # –ï—Å–ª–∏ –µ—Å—Ç—å - –¥–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –Ω–µ—ë –∞–ª–∏–∞—Å—ã

antigen bundle zsh-users/zsh-autosuggestions       # –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∫ –≤ Fish
antigen bundle reobin/typewritten@main             # –¢–µ–º–∞ –¥–ª—è zsh

# –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —á—Ç–æ –º—ã —É–∫–∞–∑–∞–ª–∏üòä
antigen apply


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  # source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
